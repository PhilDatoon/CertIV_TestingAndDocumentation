package paulasportraits;

import java.awt.Color;
import java.util.InputMismatchException;

/**
 * @author  Datoon, Philip Bryan B.
 * @since   13 November 2013
 */
public class JPhotoSession extends javax.swing.JFrame {
    private static final double ONLOCATION_FEE = 90;
    private static final double PET_FEE = 95;
    private static final double PERSON1_FEE = 40;
    private static final double PERSON2_FEE = 75;
    
    private double totalFee = 0;
    int numPetSession;
    int numPerson1Session;
    int numPerson2Session;
    private boolean IsStateChanged = false;    // sets flag for changes in item state
    
    public JPhotoSession() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_company = new javax.swing.JLabel();
        lbl_session = new javax.swing.JLabel();
        cmb_session = new javax.swing.JComboBox();
        btn_calculate = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtA_result = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        spn_person2 = new javax.swing.JSpinner();
        spn_pet = new javax.swing.JSpinner();
        spn_person1 = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ckb_person1 = new javax.swing.JCheckBox();
        ckb_pet = new javax.swing.JCheckBox();
        lbl_subject = new javax.swing.JLabel();
        ckb_person2 = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lbl_company.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_company.setText("PAULA'S PORTRAITS");

        lbl_session.setText("Session type");

        cmb_session.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "In-studio", "On location" }));
        cmb_session.setSelectedIndex(-1);

        btn_calculate.setText("Calculate fee");
        btn_calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calculateActionPerformed(evt);
            }
        });

        btn_reset.setText("Reset");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        txtA_result.setEditable(false);
        txtA_result.setColumns(20);
        txtA_result.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        txtA_result.setLineWrap(true);
        txtA_result.setRows(5);
        jScrollPane1.setViewportView(txtA_result);

        spn_person2.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));
        spn_person2.setEnabled(false);

        spn_pet.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));
        spn_pet.setEnabled(false);

        spn_person1.setModel(new javax.swing.SpinnerNumberModel(1, 1, 20, 1));
        spn_person1.setEnabled(false);

        jLabel3.setText("Person (pair/group)");

        jLabel1.setText("Pet");

        jLabel2.setText("Person (solo)");

        jLabel4.setText("Sessions");

        ckb_person1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_person1StateChanged(evt);
            }
        });

        ckb_pet.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_petStateChanged(evt);
            }
        });

        lbl_subject.setText("Portrait subject");

        ckb_person2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ckb_person2StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckb_person2)
                        .addGap(6, 6, 6)
                        .addComponent(spn_person2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckb_person1)
                        .addGap(6, 6, 6)
                        .addComponent(spn_person1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ckb_pet)
                        .addGap(6, 6, 6)
                        .addComponent(spn_pet, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(lbl_subject)))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbl_subject))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spn_pet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(ckb_pet, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckb_person1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spn_person1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ckb_person2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spn_person2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(99, 99, 99)
                        .addComponent(lbl_session)
                        .addGap(18, 18, 18)
                        .addComponent(cmb_session, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_company, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(198, 198, 198)
                                .addComponent(btn_calculate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_reset))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lbl_company)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_session)
                    .addComponent(cmb_session, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_reset)
                    .addComponent(btn_calculate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calculateActionPerformed
        numPetSession = (Integer) spn_pet.getValue();
        numPerson1Session = (Integer) spn_person1.getValue();
        numPerson2Session = (Integer) spn_person2.getValue();
        
        try {
            // sets fee for session type
            switch (cmb_session.getSelectedIndex()) {
                case -1:
                    // sets action if session type selected is null
                    throw (new InputMismatchException("Please select a session type."));                    
                case 1:
                    // sets action if session type is "on location"
                    totalFee += ONLOCATION_FEE;
                    break;
            }
            
            // sets action if none of any portrait subjects were selected
            if (!ckb_pet.isSelected()
                    && !ckb_person1.isSelected()
                    && !ckb_person2.isSelected()) {
                throw (new InputMismatchException("Please select at least one subject."));
            }
            
            // sets fee for pet as portrait subject
            if (ckb_pet.isSelected()) {
                totalFee += (numPetSession * PET_FEE);
                IsStateChanged = true;
            } else if (!ckb_pet.isSelected()) {
                if (IsStateChanged) {
                    totalFee -= (numPetSession * PET_FEE);
                }
                
                IsStateChanged = false;
            }
            
            IsStateChanged = false;
            
            // sets fee for one person as a subject
            if (ckb_person1.isSelected()) {
                totalFee += (numPerson1Session * PERSON1_FEE);
                IsStateChanged = true;
            } else if (!ckb_person1.isSelected()) {
                if (IsStateChanged) {
                    totalFee -= (numPerson1Session * PERSON1_FEE);
                }
                
                IsStateChanged = false;
            }
            
            IsStateChanged = false;
            
            // sets fee for two or more subjects
            if (ckb_person2.isSelected()) {
                totalFee += (numPerson2Session * PERSON2_FEE);
                IsStateChanged = true;
            } else if (!ckb_person2.isSelected()) {
                if (IsStateChanged) {
                    totalFee -= (numPerson2Session * PERSON2_FEE);
                }
                
                IsStateChanged = false;
            }
            
            displayTotalFee();
            
            // resets the state and total fee if user attempts to click "Calculate fee" button multiple times
            totalFee = 0;
            IsStateChanged = false;
        } catch (InputMismatchException e) {
            txtA_result.setForeground(Color.RED);
            txtA_result.setText("ERROR: " + e.getMessage());
        }
    }//GEN-LAST:event_btn_calculateActionPerformed

    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed
        // resets total fee
        totalFee = 0;
            
        // sets all components to initial state
        cmb_session.setSelectedIndex(-1);
        ckb_pet.setSelected(false);
        ckb_person1.setSelected(false);
        ckb_person2.setSelected(false);
        spn_pet.setValue(1);
        spn_person1.setValue(1);
        spn_person2.setValue(1);
        txtA_result.setText(null);
    }//GEN-LAST:event_btn_resetActionPerformed

    private void ckb_petStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_petStateChanged
        if (ckb_pet.isSelected()) {
            spn_pet.setEnabled(true);
        } else {
            spn_pet.setEnabled(false);
        }
    }//GEN-LAST:event_ckb_petStateChanged

    private void ckb_person1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_person1StateChanged
        if (ckb_person1.isSelected()) {
            spn_person1.setEnabled(true);
        } else {
            spn_person1.setEnabled(false);
        }
    }//GEN-LAST:event_ckb_person1StateChanged

    private void ckb_person2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ckb_person2StateChanged
        if (ckb_person2.isSelected()) {
            spn_person2.setEnabled(true);
        } else {
            spn_person2.setEnabled(false);
        }
    }//GEN-LAST:event_ckb_person2StateChanged

    private void displayTotalFee() {
        String sessionType = (cmb_session.getSelectedIndex() == 0) ? "In-studio" : "On location";
        double sessionFee = (cmb_session.getSelectedIndex() == 0) ? 0 : 90;
        String petFee = "";
        String personFee1 = "";
        String personFee2 = "";
        
        if (ckb_pet.isSelected()) {
            petFee = String.format(" %2d - Pet @ $ %4.2f \t\t\t$ %,8.2f\n",
                    numPetSession, PET_FEE, numPetSession * PET_FEE);
        }
        
        if (ckb_person1.isSelected()) {
            personFee1 = String.format(" %2d - Person (solo) @ $ %4.2f \t\t$ %,8.2f\n",
                    numPerson1Session, PERSON1_FEE, numPerson1Session * PERSON1_FEE);
        }
        
        if (ckb_person2.isSelected()) {
            personFee2 = String.format(" %2d - Person (pair/group) @ $ %4.2f \t$ %,8.2f\n",
                    numPerson2Session, PERSON2_FEE, numPerson2Session * PERSON2_FEE);
        }
        
        txtA_result.setForeground(Color.BLACK);
        txtA_result.setText(String.format("SESSION FEE\n" +
                " %s\t\t\t\t$ %,8.2f\n\n" +
                "PORTRAIT FEE(S)\n" + petFee + personFee1 + personFee2 +
                "\t\t\t\t\t==========\n" + "TOTAL FEE\t\t\t\t$ %,8.2f",
                sessionType, sessionFee, totalFee));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JPhotoSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JPhotoSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JPhotoSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JPhotoSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JPhotoSession().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calculate;
    private javax.swing.JButton btn_reset;
    private javax.swing.JCheckBox ckb_person1;
    private javax.swing.JCheckBox ckb_person2;
    private javax.swing.JCheckBox ckb_pet;
    private javax.swing.JComboBox cmb_session;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lbl_company;
    private javax.swing.JLabel lbl_session;
    private javax.swing.JLabel lbl_subject;
    private javax.swing.JSpinner spn_person1;
    private javax.swing.JSpinner spn_person2;
    private javax.swing.JSpinner spn_pet;
    private javax.swing.JTextArea txtA_result;
    // End of variables declaration//GEN-END:variables
}
